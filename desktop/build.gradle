plugins {
    id 'application'
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jlleitschuh.gradle.ktlint'
    id 'com.github.johnrengelman.shadow'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

mainClassName = "ai.arcblroth.boss.desktop.DesktopMain"

configurations {
    include
    backend {
        canBeConsumed false
        canBeResolved true
    }
}

dependencies {
    include(implementation(project(':core')))
    backend(project(':roast'))

    // Backend loader
    include(implementation("org.scijava:native-lib-loader:$native_lib_loader_version"))
}

processResources {
    from(configurations.backend) {
        into "natives/windows_64"
    }
}

jar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

shadowJar {
    archiveBaseName = 'BosstrovesRevenge'
    archiveClassifier = 'desktop'
    configurations = [project.configurations.include]
}

assemble.dependsOn shadowJar

def buildNativeImage = tasks.register("buildNativeImage") {
    dependsOn shadowJar

    Properties local = new Properties()
    if (rootProject.file("local.properties").exists()) {
        local.load(rootProject.file("local.properties").newDataInputStream())
    }
    def nativeImageCmd
    if(local.containsKey("nativeImagePath")) {
        nativeImageCmd = new File(local.getProperty("nativeImagePath"), "native-image").getAbsolutePath()
    } else {
        nativeImageCmd = "native-image"
    }

    def graalWorkingDir = project.file("$buildDir/graal")
    if(!graalWorkingDir.exists()) {
        graalWorkingDir.mkdirs()
    }
    
    def graalConfigDir = project.file("$projectDir/graal")
    def jniConfig = new File(graalConfigDir, "jni-config.json").getAbsolutePath()
    def reflectConfig = new File(graalConfigDir, "reflect-config.json").getAbsolutePath()
    def resourceConfig = new File(graalConfigDir, "resource-config.json").getAbsolutePath()

    doLast {
        def builtJar = shadowJar.archiveFile.get()
        project.exec {
            commandLine(nativeImageCmd)
            args(
                "-O2",
                "--no-fallback",
                "--install-exit-handlers",
                "-H:Name=BosstrovesRevenge",
                "-H:JNIConfigurationFiles=$jniConfig",
                "-H:ReflectionConfigurationFiles=$reflectConfig",
                "-H:ResourceConfigurationFiles=$resourceConfig",
                "-jar", builtJar
            )
            workingDir(graalWorkingDir.getAbsolutePath())
        }
    }
}